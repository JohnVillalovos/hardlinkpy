[tox]
minversion = 1.8
skipsdist = True
envlist = py3,pep8

[testenv]
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
         PYTHONDONTWRITEBYTECODE = 1
         LANGUAGE=en_US
         LC_ALL=en_US.UTF-8
         PYTHONWARNINGS=default::DeprecationWarning
         TESTS_DIR=./tests/unit/
deps =
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
commands =
    stestr run {posargs}
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY

[testenv:pep8]
basepython = python3
whitelist_externals = bash
commands =
  bash tools/check-black.sh {posargs}
  flake8 {posargs}
  mypy hardlinkpy/ tests/

[testenv:black]
# Environment to run 'black' on the code
basepython = python3
envdir = {toxworkdir}/pep8
whitelist_externals = bash
commands =
  black --target-version py36 .

[testenv:cover]
basepython = python3
setenv = VIRTUAL_ENV={envdir}
         LANGUAGE=en_US
         PYTHON=coverage run --source ironic --omit='*tests*' --parallel-mode
commands =
  coverage erase
  stestr run {posargs}
  coverage combine
  coverage report --omit='*tests*'
  coverage html -d ./cover --omit='*tests*'

[testenv:venv]
setenv = PYTHONHASHSEED=0
deps =
  -r{toxinidir}/test-requirements.txt
commands = {posargs}

[flake8]
# [H238] old style class declaration, use new style (inherit from `object`). This is not valid for Python 3
ignore = H238
filename = *.py,app.wsgi
exclude =  .venv,.git,.tox,dist,doc,*lib/python*,*egg,build
import-order-style = pep8
application-import-names = hardlinkpy
max-complexity = 13
max-line-length = 88
# [H203] Use assertIs(Not)None to check for None.
# [H204] Use assert(Not)Equal to check for equality.
# [H205] Use assert(Greater|Less)(Equal) for comparison.
# [H904] Delay string interpolations at logging calls.
enable-extensions=H106,H203,H204,H205,H904
